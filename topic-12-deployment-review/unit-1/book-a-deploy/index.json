


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-12c Deploy",
  "img" : "img/main.png",
  "videoid" : "qLeVRPBn05w",
  "objectives" : "<p>Deploy a Play Application to the cloud</p>",
  "folder" : "book-a-deploy",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "#Objectives",
    "shortTitle": "Lab-12c Deploy",
    "contentMd" : "#Objectives\n\nDeploy a Play Application to the cloud"
    },
  
    {
    "title": "# Setup.",
    "shortTitle": "01",
    "contentMd" : "# Setup.\n\nWe need an account on a new service to get our Play Application live in the Cloud. Visit this site:\n\n- <https://www.heroku.com>\n\nAnd sign up for a new account.\n\nOnce confirmed, log in and go you your Dashboard:\n\n- <https://dashboard.heroku.com/apps>\n\nThis is a Platform as a Service provided (PaaS), you can read about PaaS here:\n\n- <https://en.wikipedia.org/wiki/Platform_as_a_service>\n\nWe will be using this service to get our Play Applications Live.\n\n"
    },
  
    {
    "title": "# Preparing the Play Application for Deployment",
    "shortTitle": "02",
    "contentMd" : "# Preparing the Play Application for Deployment\n\nIn order to deploy the application using the Heroku service, you will need to have a copy of the application in github. Labs 12a and 12b walk though the process of doing this. \n\nThe rest of this lab assumes you have a complete repository pushed to github. There are a small number of changes we will make to the project (which we will also commit and push).\n\nThese are the main (small) adjustment we need to make:\n\n- JDK Version\n- Play Version\n- Database Settings\n- Production Mode\n\n## (1)JDK Version\n\nCreate a new file in the project root:\n\n### system.properties\n\n~~~\njava.runtime.version=8\n~~~\n\nThis sets the JDK version our app will need when deployed. It might be simplest to use Sublime to create this file - alternatively, you will need to switch to 'Project Files' mode to be able to create and save the file to the correct location.\n\n![](img/001.png)\n\n## (2) Play Version\n\nLocate this file:\n\n## conf/dependencies.yml\n\n~~~bash\n# Application dependencies\n\nrequire:\n    - play\n~~~\n\nChange it to the following:\n\n~~~bash\n# Application dependencies\n\nrequire:\n    - play 1.5.2\n    - org.postgresql -> postgresql 42.2.2:\n       force: true\n~~~\n\nThis determines the precise version of Play + the database drivers it should use.\n\n## (3) Database Settings\n\nWe also need to set the database connection configuration to use when deployed. Open `application.conf` and locate the following line:\n\n## conf/application.conf\n\n~~~bash\ndb.default=mem\n~~~\n\nComment out this line by placing a `#` in the first line:\n\n~~~\n# db.default=mem\n~~~\n\nInsert the following directly below:\n\n~~~\ndb=${DATABASE_URL}\njpa.dialect=org.hibernate.dialect.PostgreSQLDialect\njpa.ddl=update\n~~~\n\nNB: This very last change will mean that YOUR APP WILL NO LONGER RUN LOCALLY! (apologies for the caps). So you will need to reverse the very last change if you want to run locally again.\n\n\n## (4) Production Mode\n\nAlso 'application.conf' - at the top of the file we have this:\n\n~~~\n# Application mode\n# \n# Set to dev to enable instant reloading and other development help.\n# Otherwise set to prod.\napplication.mode=dev\n%prod.application.mode=prod\n~~~\n\nThis needs to be changed to this:\n\n~~~\n# Application mode\n# \n# Set to dev to enable instant reloading and other development help.\n# Otherwise set to prod.\n#application.mode=dev\nprod.application.mode=prod\n~~~\n\nWe are enabling 'production mode' for deployment.\n\nAll of the above changes need to be committed, and the pushed to git.\n\n![](img/002.png)\n\n\n\n\n"
    },
  
    {
    "title": "# Creating & Configure the Application on Heroku",
    "shortTitle": "03",
    "contentMd" : "# Creating & Configure the Application on Heroku\n\nNow we need to create and configure the application on Heroku:\n\n- Create App\n- Link to Github repo\n- Configure Buildpack\n\n## (1) Create Application\n\nBack in the Heroku \n\n- <https://www.heroku.com>\n\nLog in and you should see the main Dashboard:\n\n![](img/07.png)\n\nSelect 'New` and create a new application.\n\n![](img/08.png)\n\nGive the app a name - this will have to be unique, so perhaps consider using your initials or name in the application name:\n\n![](img/09.png)\n\nYou might also locate the app in Europe. Press `Create App` and an application console will be displayed:\n\n![](img/10.png)\n\n## (2) Link to Github\n\nOne of the options is `Github - Connect to github` ... press it and you will be asked to authorise to Github, and grant heroku access to your account.\n\nProceed to do this and your dashboard should look something like this:\n\n![](img/11.png)\n\n## (3) Configure Buildpack\n\nWe are now almost ready to deploy. We need to do one more step. Back in Heroku, switch to the `Settings` panel:\n\n![](img/14.png)\n\nPress the `Add Buildpack`:\n\n![](img/15.png)\n\nIn the above, we have added this url:\n\n~~~text\nhttps://github.com/heroku/heroku-buildpack-play\n~~~\n\nSave changes and the buildpack should be installed:\n\n![](img/16.png)\n\nThe build pack is needed to inform Heroku how a play app is configured and managed.\n\n"
    },
  
    {
    "title": "# Deploy the Application",
    "shortTitle": "04",
    "contentMd" : "# Deploy the Application\n\nBack in the `Deploy` panel - we can now press the `Deploy Branch` button.\n\n![](img/003.png)\n\nThis will take a minute or so - and pressing the 'show build logs' button will let you see more details on its progress...\n\n![](img/004.png)\n\nSwitch to the 'Settings Panel'  and under 'Domains & Certificates' you will see the url of the deployed application:\n\n\n![](img/005.png)\n\nTry the app now -\n\n![](img/19.png)\n\nLog in as `homer@simpson.com`, `secret`\n\n![](img/20.png)\n\n![](img/21.png)\n\nYou should be able to ad and remove todos. Log out, sign up a new user etc...\n\n\n"
    },
  
    {
    "title": "## Logs",
    "shortTitle": "05",
    "contentMd" : "## Logs\n\nBack in the Heroku Console - select `more` on the top right:\n\n![](img/22.png)\n\nSelect `View logs`. \n\n![](img/006.png)\n\nThis is the equivalent of the console when you were running the app locally on your workstation. When testing the deployed application it is useful to always keep this view open. It enables you to monitor the application, identify potential errors and generally keep an eye on its operation.\n\nYou now have 2 versions of the source of your application\n\n- The version you are developing using IDEA\n- A copy of the application on a synced to github.\n\n\n## Running Locally\n\nThis change you made to `conf/application.conf`:\n\n## conf/application.conf\n\n~~~\n# db.default=mem\n\ndb=${DATABASE_URL}\njpa.dialect=org.hibernate.dialect.PostgreSQLDialect\njpa.ddl=update\n~~~\n\nWill prevent you from running the application locally. i.e. it will fail to launch when running via the `play run` command. Therefore, for the version of the application you are editing via IDEA, make suer to reverse the changes if you wish to run locally:\n\n~~~\ndb.default=mem\n\n# db=${DATABASE_URL}\n# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect\n# jpa.ddl=update\n~~~\n\nHowever, if you commit and push this version, then it will run successfully if you deploy from github again.\n\nYou may also with to reverse this change\n\n~~~\n# Application mode\n# \n# Set to dev to enable instant reloading and other development help.\n# Otherwise set to prod.\n#application.mode=dev\nprod.application.mode=prod\n~~~\n\nSo that it is in dev mode when running locally."
    },
  
    {
    "title": "# Database Dashboard",
    "shortTitle": "06",
    "contentMd" : "# Database Dashboard\n\nIf you have been relying on this link:\n\n- <http://locathost9000/@db> \n\n...to view the browser when running locally - this will NOT work for the deployed version. \n\nHowever, Heroku supports an add-on called Adminium which called fulfils a similiar role. To install, locate the 'Find more add-ons' button on the `Resources` dashboard screen:\n\n![](img/007.png)\n\nPress this button and locate the plugin:\n\n![](img/008.png)\n\n\nInstall the plugin:\n\n![](img/009.png)\n\n\nSelect your app in the provision field:\n\n![](img/010.png)\n\n![](img/011.png)\n\nThe plugin should be listed in your 'Resources' panel.\n\nPressing 'Adminium' will take you to the this interface:\n\n![](img/017.png)\n\nOnce connected - you will eventually be able to browse its models like this:\n\n![](img/29.png)\n\nYou will even be able to edit the contents.\n\nYou will also be able to add tables to a `Dashboard` :\n\n![](img/31.png)\n\nThe dashboard is available at this url:\n\n- <https://www.adminium.io/dashboard>\n\n![](img/32.png)\n\nThere are additional Widgets you can experiment with here to monitor database activity over time.\n"
    },
  
    {
    "title": "# Exercises",
    "shortTitle": "Exercises",
    "contentMd" : "# Exercises\n\n## Exercise 1: Deploy Playlist 5\n\nDeploy the latest playlist application:\n\n- <https://github.com/edeleastar/playlist/releases/tag/playlist.5.end>\n\nYou will need to follow precisely steps 02, 03 and 04 from this lab.\n\n## Exercise 2: Workspace\n\nSee if you can arrange your workspace like this:\n\n![](img/33.png)\n\nHere we are monitoring the deploy logs, the main application logs, the database console and the application itself (including the browser tools).\n\nTry some variation of this now and get familiar with the nature of the information in each of the windows. Proceed through a deploy cycle while doing this (make a cosmetic change to the app in dropbox to allow a deploy to be triggered)\n\n"
    }
  
  ]
  }

