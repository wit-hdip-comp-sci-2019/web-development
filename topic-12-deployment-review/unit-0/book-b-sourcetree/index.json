


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-12a Git Setup",
  "img" : "img/main.png",
  "videoid" : "BjXM9VUNM58",
  "objectivesMd" : "Install and Configure Git + the Sourcetree git GUI",
  "objectives" : "<p>Install and Configure Git + the Sourcetree git GUI</p>",
  "folder" : "book-b-sourcetree",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "# Objectives",
    "shortTitle": "Lab-12a Git Setup",
    "contentMd" : "# Objectives\n\nInstall and Configure Git + the Sourcetree git GUI\n"
    },
  
    {
    "title": "# Git,  Github & Bitbucket",
    "shortTitle": "01",
    "contentMd" : "# Git,  Github & Bitbucket\n\nYou should already have git installed on your workstation. If not, download and install from here:\n\n- <https://git-scm.com/downloads>\n\nVerify that is is by opening a shell (command prompt on Windows) and enter the following:\n\n~~~\ngit --version\n~~~\n\nThe system might respond with something like this:\n\n~~~bash\ngit version 2.20.1\n~~~\n\n# Github\n\nSign up for a github account:\n\n- <https://github.com/>\n\nBe sure to verify your email.\n\n# Bitbucket\n\nSign up for a github account:\n\n- <https://bitbucket.org/>\n\nBe sure to verify your email."
    },
  
    {
    "title": "# Install Sourcetree",
    "shortTitle": "02",
    "contentMd" : "# Install Sourcetree\n\nVisit:\n\n- <https://www.sourcetreeapp.com/>\n\nAnd download and install the application for your platform.\n\nOn the very first screen - you will be asked to log in to you Atlassian Bitbucket account. You should have created this in the last step. \n\nSelect 'Bitbucket' in the first screen:\n\n![](img/01.png)\n\nOnce your account is verified, you should see this:\n\n![](img/02.png)\n\nIn the next screen, select advanced options and select the options below:\n\n![](img/03.png)\n\nEnter your full name and email address:\n\n![](img/04.png)\n\n\nYou will be asked about ssh keys - you can skip this step for the moment:\n\n![](img/05.png)\n\n\nYou will eventually get this start screen:\n\n![](img/06.png)\n\n\nThe installation will be automatically linked to a bitbucket account. We should now also link it to your github account.\n\nSelect Tools->Options->Authentication and follow the steps below:\n\n\n![](img/07.png)\n\nAdd a new github account\n\n![](img/08.png)\n\nEnter github account name and select 'refresh password'\n\n![](img/09.png)\n\n![](img/001.png)\n\n![](img/002.png)\n\n![](img/003.png)\n\nYour github account should be verified - and you should now have 2 linked accounts:\n\n![](img/004.png)"
    },
  
    {
    "title": "# Create new Repo on Github",
    "shortTitle": "03",
    "contentMd" : "# Create new Repo on Github\n\nBack on github:\n\n- <https://github.com>\n\nCreate a new repository:\n\n![](img/17.png)\n\nThis will create a new empty repo on github.\n\n![](img/18.png)\n\nNote carefully the url of the repo - in the box above. Copy this to the clipboard now.\n"
    },
  
    {
    "title": "# Create New Application",
    "shortTitle": "04",
    "contentMd" : "# Create New Application\n\nWe now would like to start a new play application, which we will associate with the github repository we have just crested.\n\nFirst, create a new app by cloning a starter app:\n\n## Create New Project\n\nCreate a new play project using this command:\n\n~~~bash\ngit clone https://github.com/wit-hdip-comp-sci-2019/play-template-1\n~~~\n\nThe shell should show something like this:\n\n~~~\nCloning into 'play-template-1'...\nremote: Counting objects: 66, done.\nremote: Compressing objects: 100% (47/47), done.\nremote: Total 66 (delta 9), reused 66 (delta 9), pack-reused 0\nUnpacking objects: 100% (66/66), done.\n~~~\n\n## Rename Project\n\nThe default name of the project should be changed now. This will require the following procedure:\n\n- Rename the folder `play-template-1`. Call the folder `todolist-versioned` instead.\n- Use Sublime Text to edit this file: `playlist/conf/application.conf`. The first three lines contains the following:\n\n    ~~~\n    # This is the main configuration file for the application.\n    # ~~\n    application.name=play-template-1\n    ~~~\n\n- Change `play-template-1` above to `todolist-versioned`, and save the file:\n\n    ~~~\n    # This is the main configuration file for the application.\n    # ~~\n    application.name=todolist-versioned\n    ~~~\n\n## Unbind from github\n\nThis app has been cloned from github - and is still bound to the repository it was cloned from. We can break this link - and we will reestablish a link to a new github repository you will create in the next steps. \n\nTo break the existing link, simply completely delete the `.git` folder form the project:\n\n![](img/004.png)\n\n\n(you may need to reveal `hidden files` to see the folder)\n\n\n\n\n\n\n\n\n"
    },
  
    {
    "title": "# Set Remote Repo",
    "shortTitle": "05",
    "contentMd" : "# Set Remote Repo\n\nYour Sourcetree app currently looks like this:\n\n![](img/06.png)\n\nSelect the Create button from the toolbar and locate the folder containing the project we have just created:\n\n![](img/005.png)\n\nPress Create - and select Yes in the subsequent dialog:\n\n![](img/006.png)\n\nSourcetree will now be configured as shown:\n\n![](img/007.png)\n\nWe can now 'stage' all of the sources in the project by pressing the 'Stage All' button:\n\n![](img/008.png)\n\nWith the configuration as shown above, enter a short message 'template play project' as shown:\n\n![](img/009.png)\n\nPress 'Commit' and the Source tree will be configured like this:\n\n![](img/010.png)\n\nFinally, select 'master' on the left:\n\n![](img/017.png)\n\nThis seems a complex, but the process is always the same:\n\n- Stage: this is selecting which files to be added (or which changed files are to be added)\n- Commit Message: a easily readable short message\n- Commit : bind the changes + commit message and update the repository\n\n"
    },
  
    {
    "title": "# Bind the Local Repo to a Remote one",
    "shortTitle": "06",
    "contentMd" : "# Bind the Local Repo to a Remote one\n\nIs Sourcetree, select Repository-Repository Settings:\n\n![](img/011.png)\n\nPress add, and enter the following:\n\n- Remote Name: 'origin'\n- URL/Path : - enter the repository path that for the repository you created in Step 03 of this lab.\n\n![](img/012.png)\n\nPress ok:\n\n![](img/013.png)\n\nBack in the main Sourcetree window, press 'Push'\n\n![](img/014.png)\n\nIn the subsequent dialog, tick the checkbox next to 'master', and then press push. This will transfer a copy of the local files in the repository to the copy on github.\n\nEventually, Sourcetree will settle into this view:\n\n![](img/015.png)\n\n.. and if you look at the github site and the repo you created in step 03, you should see a copy of the project:\n\n![](img/018.png)\n\nThe 'local' and 'remote' repositories are now linked - and changes we make locally we will need to explicitly push a 'commit' of new additions as we make them.\n\n"
    },
  
    {
    "title": "# Exercises",
    "shortTitle": "Exercises",
    "contentMd" : "# Exercises\n\nTo get fluent with this procedure, try the following:\n\n## Exercise 1: Github Practice \n\nCreate another new app - called `demo-1` - using the procedure  specified on Step 03.\n\nThen, following steps 04, 05 and 06, attach the new project to the demo-1 github repo.\n\n## Exercise 2: Bitbucket Practice\n\nThe procedure we carried out to bind a local repo to github can also be carried out to bind a repo to a bitbucket hosted repository.\n\nCreate (another!) new project `demo-2` - this time see if you can figure out how put it on bitbucket.\n\nThe main difference between github and bitbucket is that github repos are always public, whereas bitbucket can be either, but default to private.\n\n\n"
    }
  
  ]
  }

