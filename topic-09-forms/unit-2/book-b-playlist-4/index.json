


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-09b Playlist-4",
  "img" : "img/main.jpeg",
  "videoid" : "none",
  "objectives" : "<p>Introduce forms into a play application to enable the user to create playlists.</p>",
  "folder" : "book-b-playlist-4",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "# Objectives",
    "shortTitle": "Lab-09b Playlist-4",
    "contentMd" : "# Objectives\n\nIntroduce forms into a play application to enable the user to create playlists.\n"
    },
  
    {
    "title": "# Exercise Solutions",
    "shortTitle": "Exercise Solutions",
    "contentMd" : "# Exercise Solutions\n\nIf you have completed the Playlist labs to date, then you can continue to work in the Playlist project you should have created.\n\nIf you cannot locate this project, or it has become unusable - then you can start from the solution lab08b:\n\n- <https://github.com/wit-hdip-comp-sci-2019/playlist/releases/tag/playlist.3.end>\n\nDownload the archive, unzip and run `play idealize` - and then open in Idea.\n\n## Exercise 2: UX Enhancements\n\nIntroduce a 'Delete Playlist' button for each playlist, represented by a `trash` icon. E.g:\n\n![](img/06.png)\n\nIn addition, the `view` link is replace by a `folder open` icon.\n\nBind the `delete playlist` button to a new function to be implemented in the Dashboard controller, which should log the id of the playlist to be deleted.\n\n## Solution\n\nFirst the new user interface:\n\n### app/views/dashboard.html\n\n~~~\n#{extends 'main.html' /}\n#{set title:'Dashboard' /}\n\n#{menu id:\"dashboard\"/}\n\n#{list items:playlists, as:'playlist'}\n  <section class=\"ui segment\">\n    <h2 class=\"ui header\">\n      ${playlist.title} \n    </h2>\n      <p> Total Duration: ${playlist.duration} </p>\n      <a href=\"/playlists/${playlist.id}\" class=\"ui icon button\">\n        <i class=\"icon folder open\"></i>\n      </a>\n      <a href=\"/dashboard/deleteplaylist/${playlist.id}\" class=\"ui icon button\">\n        <i class=\"icon trash\"></i>\n      </a>\n  </section>\n#{/list}\n~~~\n\n## Exercise 3: Delete Playlist Functionality\n\nNow, make the button actually delete the denoted playlist.\n\n## Solution\n\n### conf/routes\n\n~~~\nGET     /dashboard/deleteplaylist/{id}          Dashboard.deletePlaylist\n~~~\n\n### app/controllers/Dashboard.java\n\n~~~\n...\n  public static void deletePlaylist (Long id)\n  {\n    Playlist playlist = Playlist.findById(id);\n    Logger.info (\"Removing\" + playlist.title);\n    playlist.delete();\n    redirect (\"/dashboard\");\n  }\n...  \n~~~\n\nTry this now - and make sure a playlist is being deleted.\n\nAlso - check to see if the songs in the playlist are also deleted?\n\n\n\n"
    },
  
    {
    "title": "# Add Song Form",
    "shortTitle": "01",
    "contentMd" : "# Add Song Form\n\nIntroduce a new partial to provide a simple form to add songs to a playlist:\n\n## app/views/tags/addsong.html\n\n~~~\n<form class=\"ui stacked segment form\" action=\"/playlists/${_playlist.id}/addsong\" method=\"POST\">\n  <div class=\"two fields\">\n    <div class=\"field\">\n      <label>Title</label>\n      <input placeholder=\"Title\" type=\"text\" name=\"title\">\n    </div>\n    <div class=\"field\">\n      <label>Artist</label>\n      <input placeholder=\"Artist\" type=\"text\" name=\"artist\">\n    </div>\n    <div class=\"field\">\n      <label>Duration</label>\n      <input placeholder=\"Duration\" type=\"number\" name=\"duration\">\n    </div>\n  </div>\n  <button class=\"ui blue submit button\">Add Song</button>\n</form>\n~~~\n\n\nNow include this partial in the playlist view (at the end):\n\n## app/views/playlist.html\n~~~\n#{extends 'main.html' /}\n#{set title:'Playlist' /}\n\n#{menu id:\"dashboard\"/}\n\n<section class=\"ui segment\">\n  <h2 class=\"ui header\">\n    ${playlist.title}\n  </h2>\n  #{listsongs playlist:playlist /}\n  #{addsong playlist:playlist /}\n</section>\n~~~\n\nThe playlists should now render like this:\n\n![](img/01.png)\n\nWe have a new form and an `add song` button"
    },
  
    {
    "title": "# Add Song Route + Action",
    "shortTitle": "02",
    "contentMd" : "# Add Song Route + Action\n\nTo implement the feature - we need a new route:\n\n\n## conf/routes\n\n~~~\n...\nPOST    /playlists/{id}/addsong                  PlaylistCtrl.addSong\n...\n~~~\n\nPut this below the existing playlist routes.\n\nFinally, the actual implementation of the add the song - a new method in the Playlist Controler:\n\n## app/controllers/PlaylistCtrl.java\n\n~~~\n...\n  public static void addSong(Long id, String title, String artist, int duration)\n  {\n    Song song = new Song(title, artist, duration);\n    Playlist playlist = Playlist.findById(id);\n    playlist.songs.add(song);\n    playlist.save();\n    redirect (\"/playlists/\" + id);\n  }\n...\n~~~\n\nRestart the app now - and verify that you can add songs. Check in the database to verify that the new songs appear in the table.\n"
    },
  
    {
    "title": "# Add Playlist Form",
    "shortTitle": "03",
    "contentMd" : "# Add Playlist Form\n\nCreate a new partial containig a form to support adding new playlists:\n\n## app/views/tags/addplaylist.html\n\n~~~\n<form class=\"ui stacked segment form\" action=\"/dashboard/addplaylist\" method=\"POST\">\n  <div class=\"field\">\n    <label>Title</label>\n    <input placeholder=\"Title\" type=\"text\" name=\"title\">\n  </div>\n  <button class=\"ui blue submit button\">Add Playlist</button>\n</form>\n~~~\n\nInclude this partial at the end of the dashboard view:\n\n## app/views/dashboard.html\n\n~~~\n...\n...\n#{addplaylist /}\n~~~\n\nThe dashboard should look like this now:\n\n![](img/02.png)"
    },
  
    {
    "title": "# Add Playlist Route + Action",
    "shortTitle": "04",
    "contentMd" : "# Add Playlist Route + Action\n\nTo implement the feature - we need a new route:\n\n## conf/routes\n\n~~~\n...\nPOST    /dasghboard/addplaylist                 Dashboard.addPlaylist\n...\n~~~\n\nFinally, the actual implementation of the add playlist logic:\n\n## app/controllers/Dashboard.java\n\n~~~\n...\n  public static void addPlaylist (String title)\n  {\n    Playlist playlist = new Playlist (title, 0);\n    Logger.info (\"Adding a new playlist called \" + title);\n    playlist.save();\n    redirect (\"/dashboard\");\n  }\n...\n~~~\n\nRestart the app now - and verify that you can add playlists. Check in the database to verify that the new playlists appear in the table. Also add some songs to the playlist.\n"
    },
  
    {
    "title": "# Exercises",
    "shortTitle": "Exercises",
    "contentMd" : "# Exercises\n\n## Exercise 1 : Download, Rename and Run the Sample Solution\n\nEven if you have successfully completed this lab - do not skip this step, as it is important to be able to run the sample solutions occasionally, and also retain them for reference purposes.\n\nA complete version of the app as it should be at the end of this lab:\n\n- <https://github.com/wit-hdip-comp-sci-2019/playlist/releases/tag/playlist.4.end>\n\nDownload, unzip,`idealize` the project. Then run it. You should be comfortable doing this now. "
    }
  
  ]
  }

